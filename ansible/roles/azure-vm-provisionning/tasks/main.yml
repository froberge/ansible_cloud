---
# tasks file for azure-vm-provisionning

- name: Create ressource group 
  azure_rm_resourcegroup:
    client_id: "{{ azure_client_id }}"
    tenant: "{{ azure_tenant }}"
    subscription_id: "{{ azure_subscription_id }}"
    secret: "{{ azure_secret }}"
    name: "{{ res_group }}"
    location: "{{ res_group_location }}"

- name: Create virtual network
  azure_rm_virtualnetwork:
    client_id: "{{ azure_client_id }}"
    tenant: "{{ azure_tenant }}"
    subscription_id: "{{ azure_subscription_id }}"
    secret: "{{ azure_secret }}"
    resource_group: "{{ res_group }}"
    name: "vn_{{ instance_name_prefix }}"
    address_prefixes: "{{virtual_network_cidr}}"
  register: vnet_result

- name: Add subnet
  azure_rm_subnet:
    client_id: "{{ azure_client_id }}"
    tenant: "{{ azure_tenant }}"
    subscription_id: "{{ azure_subscription_id }}"
    secret: "{{ azure_secret }}"
    resource_group: "{{ res_group }}"
    name: "sn_{{ instance_name_prefix }}"
    address_prefix: "{{virtual_network_cidr}}"
    virtual_network: "vn_{{ instance_name_prefix }}"
  register: subnet_result

- name: Create security group that allows incoming traffic on SSH/HTTP/HTTPS/8080
  azure_rm_securitygroup:
    client_id: "{{ azure_client_id }}"
    tenant: "{{ azure_tenant }}"
    subscription_id: "{{ azure_subscription_id }}"
    secret: "{{ azure_secret }}"
    resource_group: "{{ res_group }}"
    name: "sg_{{instance_name_prefix}}"
    rules:
      - name: SSH
        protocol: Tcp
        destination_port_range: 22
        access: Allow
        priority: 101
        direction: Inbound
      - name: HTTP
        protocol: Tcp
        destination_port_range: 80
        access: Allow
        priority: 103
        direction: Inbound
      - name: HTTPS
        protocol: Tcp
        destination_port_range: 443
        access: Allow
        priority: 104
        direction: Inbound
      - name: Custom
        protocol: Tcp
        destination_port_range: 8080
        access: Allow
        priority: 105
        direction: Inbound

- name: Create public ip for RHEL VM
  azure_rm_publicipaddress:
    client_id: "{{ azure_client_id }}"
    tenant: "{{ azure_tenant }}"
    subscription_id: "{{ azure_subscription_id }}"
    secret: "{{ azure_secret }}"
    resource_group: "{{ res_group }}"
    allocation_method: Static
    name: "pbip_{{ item }}"
  loop: "{{ instance_name_list }}"
  register: publicip_result

- name: Create NIC (Network Interface Card ) for RHEL VM
  azure_rm_networkinterface:
    client_id: "{{ azure_client_id }}"
    tenant: "{{ azure_tenant }}"
    subscription_id: "{{ azure_subscription_id }}"
    secret: "{{ azure_secret }}"
    resource_group: "{{ res_group }}"
    name: "nic_{{ item }}"
    virtual_network: "vn_{{ instance_name_prefix }}"
    subnet: "sn_{{ instance_name_prefix }}"
    public_ip_name: "pbi_{{ item }}"
    security_group: "sg_{{ instance_name_prefix }}"
  loop: "{{ instance_name_list }}"

- name: Create storage account
  azure_rm_storageaccount:
    client_id: "{{ azure_client_id }}"
    tenant: "{{ azure_tenant }}"
    subscription_id: "{{ azure_subscription_id }}"
    secret: "{{ azure_secret }}"
    resource_group: "{{ res_group }}"
    name: "lrs{{ instance_name_prefix }}"
    type: "{{ storage_class }}"

- name: Create RHEL VM - Latest release available
  azure_rm_virtualmachine:
    client_id: "{{ azure_client_id }}"
    tenant: "{{ azure_tenant }}"
    subscription_id: "{{ azure_subscription_id }}"
    secret: "{{ azure_secret }}"
    resource_group: "{{ res_group }}"
    name: "{{ item }}"
    vm_size: "{{ vm_size }}"
    managed_disk_type: "{{ storage_class }}"
    storage_account: "lrs{{ instance_name_prefix }}"
    storage_container: "vms{{instance_name_prefix}}"
    storage_blob: "instance_name_prefix.vhd"
    admin_username: "{{ default_username }}"
    admin_password: "{{ default_password }}"
    network_interfaces: "nic_{{ item }}"
    ssh_public_keys:
      - path: /home/{{ default_username }}/.ssh/authorized_keys
        key_data: "{{ lookup('env', 'AZURE_VM_SSH_PUBLIC_KEY')}}"
    tags: 
      Name: "{{ item }}"
      Owner: "{{ owner }}" 
      project: "{{ project_name }}"
      type: "{{ vm_tag_type }}"
      provider: "Azure"
    image:
      offer: RHEL
      publisher: RedHat
      sku: '9_0'
      version: latest
  loop: "{{ instance_name_list }}"
  register: vm_result

- name: Wait for SSH connectivity
  wait_for:
    host: "{{ publicip_result.state.ip_address }}"
    port: 22
    delay: 10
    timeout: 300
    state: started

- name: Print SSH connection information
  debug:
    msg: "SSH connection to {{ default_username }}@{{ publicip_result.state.ip_address }}"
